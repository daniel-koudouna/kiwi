plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'edu.sc.seis.launch4j' version '2.4.4'
}

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

mainClassName = 'com.proxy.kiwi.app.Kiwi'
version = getVersionName()

repositories {
    mavenCentral()
    jcenter()
}


jar {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dependencies {
    compile group: "com.google.code.gson", name: "gson", version: "2.3.1"
    compile group: "com.github.junrar", name: "junrar", version: "3.1.0"
    compile group: "commons-io", name: "commons-io", version: "1.3.2"
    compile group: "com.drewnoakes", name: "metadata-extractor", version: "2.9.1"
    compile group: "org.imgscalr", name: "imgscalr-lib", version: "4.2"
    compile group: "org.apache.ant", name: "ant", version: "1.8.1"
    compile group: "com.twelvemonkeys.imageio", name: "imageio-jpeg", version: "3.3"
    compile group: "com.twelvemonkeys.imageio", name: "imageio-tiff", version: "3.3"
    compile group: "com.dorkbox", name: "SystemTray", version: "3.1"
    compile group: "net.java.dev.jna", name: "jna", version: "4.3.0"
}


launch4j {
    outfile = 'Kiwi.exe'
    mainClassName = project.mainClassName
    copyConfigurable = project.tasks.shadowJar.outputs.files
    icon = "${projectDir}/src/main/resources/image/kiwi.ico"
    jar = "lib/${project.tasks.shadowJar.archiveName}"
    fileDescription = 'Portable and Lighting fast image viewer'
}

task debugExecutable(type: edu.sc.seis.launch4j.tasks.Launch4jLibraryTask) {
    outfile = 'Kiwi-debug.exe'
    fileDescription = 'With STDOUT'
    stayAlive = true
    headerType = "console"
}

import org.apache.tools.ant.filters.ReplaceTokens

task createInstaller() {
    def innoSetupDir = new File("${buildDir}/innosetup")
    def deployFiles = "${rootProject.projectDir}/src/main/resources/windows"

    delete innoSetupDir  
    innoSetupDir.mkdir();  

    copy {
        from(deployFiles) {
            exclude("**/*.iss")
        }
        from(deployFiles) {
            include("**/*.iss")
            filter(ReplaceTokens, tokens: [
                name: 'Kiwi', 
                version: ""+project.version, 
                description: "Kiwi - A lightweight Image Viewer", 
                author: "Daniel Koudouna"
            ])
        }
        into(innoSetupDir)
    }

    copy {
        from("${buildDir}/launch4j")
        into("${buildDir}/innosetup/Kiwi")
    }

    exec {
        workingDir rootProject.projectDir
        String iscc = "C:\\Program Files (x86)\\Inno Setup 5\\iscc.exe"
        String setupFile = "${buildDir}/innosetup/Kiwi.iss"
        commandLine "cmd", "/c", iscc, setupFile
    }

    copy {
        from("${buildDir}/innosetup/Output")
        into("${buildDir}/dist")
    }
    
    delete "${buildDir}/innosetup/Output"
}

createAllExecutables.finalizedBy(createInstaller)
